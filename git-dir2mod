#! /bin/zsh

set -e

PTH_SCRIPTS=$(dirname $(readlink -f ${(%):-%x}))
URL_ORIGINAL=$1
PTH_SUBFOLDER=$2
URL_SUBMODULE=$3
PTH_PARENT=${4:-/tmp/$(basename $1)-parent}
PTH_SUBMODULE=${5:-/tmp/$(basename $1)-submodule}


SECTION() {
    echo "\n\n$1"
    echo ${1//?/=}
}


extract_submodule() {
    local origin=$(readlink -f $1)
    local submodule=$(readlink -f $2)
    local subfolder=$3

    git clone $origin $submodule --mirror
    cd $submodule

    SECTION "$submodule: Extracting folder '$subfolder'"
    git filter-branch --prune-empty --subdirectory-filter $subfolder \
        -- --branches --tags

    SECTION "$submodule: Deleting disconnected branches"
    git show-ref | while read sha ref; do
        if ! git merge-base master $ref >/dev/null; then
            if [[ $ref == refs/tags/* ]]; then
                git tag -d ${ref#refs/tags/}
            elif [[ $ref == refs/heads/* ]]; then
                git branch -D ${ref#refs/heads/}
            fi
        fi
    done

    SECTION "$submodule: Creating index: TREE -> COMMIT"
    mkdir treemap
    git log --format="%H %T" --branches --tags | while read sha1 tree; do
        echo $sha1 > treemap/$tree
    done

    cd -
}

rewrite_dir2mod() {
    if [[ -n $SLOW_REWRITE ]]; then
        rewrite_dir2mod_slow $@
    else
        rewrite_dir2mod_fast $@
    fi
}

rewrite_dir2mod_fast() {
    local origin=$(readlink -f $1)
    local submodule=$(readlink -f $2)
    local subfolder=$3
    local url=$4
    cd $origin

    python3 $PTH_SCRIPTS/git_filter_tree dir2mod \
        $submodule/treemap $subfolder $url \
        -- --branches --tags

    cd -
}

rewrite_dir2mod_slow() {
    export repository=$(readlink -f $1)
    export submodule=$(readlink -f $2)
    export subfolder=$3
    local  url=$4

    cd $repository

    >gitmod <<EOF
[submodule "$subfolder"]
    path = $subfolder
    url = $url
EOF
    export obj_gitmod=$(git hash-object -w -t blob --stdin < gitmod)

    refs=($(git show-ref | cut -d' ' -f2- | grep -e ^refs/heads/ -e ^refs/tags/))
    git filter-branch --index-filter '
        f() {
            if obj_folder=$(git rev-parse $GIT_COMMIT:"$subfolder" 2>/dev/null); then
                if obj_gitmod_old=$(git rev-parse $GIT_COMMIT:.gitmodules 2>/dev/null); then
                    local obj_gitmod=$( (git cat-file blob $obj_gitmod_old &&
                                         cat "$repository"/gitmod) |
                                        git hash-object -w -t blob --stdin )
                fi
                obj_submod=$(cat "$submodule"/treemap/$obj_folder)
                git rm -r --cached -q "$subfolder"
                git update-index --add --cacheinfo 100644 $obj_gitmod .gitmodules
                git update-index --add --cacheinfo 160000 $obj_submod "$subfolder"
            fi
        }; f
        ' -- $refs

    cd -
}


#----------------------------------------
# MAIN
#----------------------------------------

git clone $URL_ORIGINAL $PTH_PARENT --mirror
extract_submodule $PTH_PARENT $PTH_SUBMODULE $PTH_SUBFOLDER
rewrite_dir2mod $PTH_PARENT $PTH_SUBMODULE $PTH_SUBFOLDER $URL_SUBMODULE
$PTH_SCRIPTS/git-compress $PTH_SUBMODULE
$PTH_SCRIPTS/git-compress $PTH_PARENT
